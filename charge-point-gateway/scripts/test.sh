#!/bin/bash

# ÊµãËØïÊâßË°åËÑöÊú¨

set -e

echo "üß™ Running comprehensive tests..."

# ËøõÂÖ•È°πÁõÆÁõÆÂΩï
cd "$(dirname "$0")/.."

# Ê∏ÖÁêÜ‰πãÂâçÁöÑÊµãËØïÁªìÊûú
echo "Cleaning previous test results..."
rm -f coverage.out coverage.html

# ËøêË°åÂçïÂÖÉÊµãËØï
echo "Running unit tests..."
go test -v -race -coverprofile=coverage.out ./...

# ÁîüÊàêË¶ÜÁõñÁéáÊä•Âëä
echo "Generating coverage report..."
go tool cover -func=coverage.out

# Ê£ÄÊü•Ë¶ÜÁõñÁéáÊòØÂê¶ËææÂà∞Ë¶ÅÊ±Ç
COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
REQUIRED_COVERAGE=80

echo "Coverage: ${COVERAGE}%"

if (( $(echo "$COVERAGE >= $REQUIRED_COVERAGE" | bc -l) )); then
    echo "‚úÖ Coverage requirement met (${COVERAGE}% >= ${REQUIRED_COVERAGE}%)"
else
    echo "‚ùå Coverage requirement not met (${COVERAGE}% < ${REQUIRED_COVERAGE}%)"
    exit 1
fi

# ÁîüÊàêHTMLË¶ÜÁõñÁéáÊä•Âëä
echo "Generating HTML coverage report..."
go tool cover -html=coverage.out -o coverage.html
echo "Coverage report generated: coverage.html"

# ËøêË°åÂü∫ÂáÜÊµãËØï
echo "Running benchmark tests..."
go test -bench=. -benchmem ./... || echo "No benchmark tests found"

# ËøêË°åÁ´ûÊÄÅÊ£ÄÊµã
echo "Running race detection tests..."
go test -race ./...

# Ê£ÄÊü•ÊµãËØïÊñá‰ª∂ÂëΩÂêçËßÑËåÉ
echo "Checking test file naming conventions..."
find . -name "*_test.go" -not -path "./vendor/*" | while read -r file; do
    if [[ ! "$file" =~ _test\.go$ ]]; then
        echo "‚ùå Test file $file does not follow naming convention"
        exit 1
    fi
done

echo "‚úÖ Test file naming conventions are correct"

echo "üéâ All tests passed successfully!"
